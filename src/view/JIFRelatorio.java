/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import data.CaminhaoData;
import data.RelatorioData;
import data.UsuarioData;
import extras.tratarFormularios;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Caminhao;
import model.Relatorio;
import model.Usuario;

/**
 *
 * @author onerb
 */
public class JIFRelatorio extends javax.swing.JInternalFrame {
    private Relatorio obj;
    private RelatorioData DAO;
    
    private UsuarioData DAOusuario;
    private ArrayList<Usuario> listadeusuarios;
    
    private CaminhaoData DAOcaminhao;
    private ArrayList<Caminhao> listadecaminhao;
    
    private ArrayList<Relatorio> listaderelatorios;
    private int acao=0;
       
    /**
     * Creates new form JIFRelatorio
     */
    public JIFRelatorio() {
        try {
           initComponents();
           obj = new Relatorio();
           DAO = new RelatorioData();
           
           listaderelatorios = new ArrayList<>();
           DAO = new RelatorioData();
           
           DAOusuario = new UsuarioData();
           listadeusuarios = new ArrayList<>();
           listadeusuarios = DAOusuario.carregarCombo();
           jcbusuariosCad.removeAllItems();
           jcbusuariosCad.addItem("Selecione um usuario");
           for(Usuario u: listadeusuarios){
               jcbusuariosCad.addItem(u.getNome());
           }
//           jcbusuariosCad.removeAllItems();
           DAOcaminhao = new CaminhaoData();
           listadecaminhao = new ArrayList<>();
           listadecaminhao = DAOcaminhao.carregarCombo();
           jcbcaminhaoCad.removeAllItems();
           jcbcaminhaoCad.addItem("Selecione uma placa");
           for(Caminhao u: listadecaminhao){
               jcbcaminhaoCad.addItem(u.getPlaca());
           }
      
//           for(Usuario u: listadeusuarios)
//               jcbusuariosCad.addItem(u.getNome());
     
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, erro.getMessage());
        }
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jlidrel = new javax.swing.JLabel();
        jbNovo = new javax.swing.JButton();
        jbEditar = new javax.swing.JButton();
        jbCancelar = new javax.swing.JButton();
        jbSalvar = new javax.swing.JButton();
        jcbusuariosCad = new javax.swing.JComboBox<>();
        jcbcaminhaoCad = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtfdiario = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jtfPesquisa = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtbrelatorios = new javax.swing.JTable();
        jbexcluir = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("RELATÓRIOS");
        try {
            setSelected(true);
        } catch (java.beans.PropertyVetoException e1) {
            e1.printStackTrace();
        }
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel1.setText("ID Funcionário");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 210, -1, 20));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel2.setText("ID Caminhão");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 210, -1, -1));

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel3.setText("Diário");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 270, -1, -1));

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel4.setText("Relatório");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, -1, -1));

        jlidrel.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jlidrel.setText("0");
        getContentPane().add(jlidrel, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, 18, -1));

        jbNovo.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jbNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Add.png"))); // NOI18N
        jbNovo.setText("Novo");
        jbNovo.setContentAreaFilled(false);
        jbNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNovoActionPerformed(evt);
            }
        });
        getContentPane().add(jbNovo, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 420, 90, -1));

        jbEditar.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jbEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Editar.png"))); // NOI18N
        jbEditar.setText("Editar");
        jbEditar.setContentAreaFilled(false);
        jbEditar.setEnabled(false);
        jbEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEditarActionPerformed(evt);
            }
        });
        getContentPane().add(jbEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 420, 100, -1));

        jbCancelar.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jbCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Cancel.png"))); // NOI18N
        jbCancelar.setText("Cancelar");
        jbCancelar.setContentAreaFilled(false);
        jbCancelar.setEnabled(false);
        jbCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jbCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 420, -1, -1));

        jbSalvar.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jbSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Salvar.png"))); // NOI18N
        jbSalvar.setText("Salvar");
        jbSalvar.setContentAreaFilled(false);
        jbSalvar.setEnabled(false);
        jbSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalvarActionPerformed(evt);
            }
        });
        getContentPane().add(jbSalvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 413, 110, 70));

        jcbusuariosCad.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jcbusuariosCad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbusuariosCad.setEnabled(false);
        jcbusuariosCad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcbusuariosCadMouseClicked(evt);
            }
        });
        jcbusuariosCad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbusuariosCadActionPerformed(evt);
            }
        });
        getContentPane().add(jcbusuariosCad, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, 130, 30));

        jcbcaminhaoCad.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jcbcaminhaoCad.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbcaminhaoCad.setEnabled(false);
        getContentPane().add(jcbcaminhaoCad, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 240, 130, 30));

        jtfdiario.setColumns(20);
        jtfdiario.setRows(5);
        jtfdiario.setText("Data: \nOcorrência?: Sim/Não\nObservações: \nUtilizou peças?Quais?: (Codigo)\nDescreva sua viagem:\nDigite seu telefone: ");
        jtfdiario.setEnabled(false);
        jtfdiario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfdiarioMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtfdiario);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, 660, 110));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jLabel5.setText("Pesquisar: ");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 50, -1, -1));

        jtfPesquisa.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jtfPesquisa.setText("Digite um nome para pesquisar...");
        jtfPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtfPesquisaMouseClicked(evt);
            }
        });
        jtfPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jtfPesquisaKeyReleased(evt);
            }
        });
        getContentPane().add(jtfPesquisa, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 580, -1));

        jtbrelatorios.setFont(new java.awt.Font("Times New Roman", 0, 16)); // NOI18N
        jtbrelatorios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Funcionário", "Veículo", "Diário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbrelatorios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbrelatoriosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jtbrelatorios);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 660, 90));

        jbexcluir.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jbexcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icones/Delete.png"))); // NOI18N
        jbexcluir.setText("Excluir");
        jbexcluir.setContentAreaFilled(false);
        jbexcluir.setEnabled(false);
        jbexcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jbexcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jbexcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbexcluirActionPerformed(evt);
            }
        });
        getContentPane().add(jbexcluir, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 420, 100, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNovoActionPerformed
    jcbusuariosCad.setEnabled(true);
    jcbcaminhaoCad.setEnabled(true);
    jtfdiario.setEnabled(true);
    jbCancelar.setEnabled(true);
    jbSalvar.setEnabled(true);
    acao = 1;
    jcbusuariosCad.setSelectedIndex(0);
    jcbcaminhaoCad.setSelectedIndex(0);
    jtfdiario.setText("Data:          \n" +
                      "Ocorrência?:         \n" +
                      "Observações:         \n" +
                      "Utilizou peças?Quais?:        \n" +
                      "Descreva sua viagem: ");
        // TODO add your handling code here:
    }//GEN-LAST:event_jbNovoActionPerformed

    private void jbCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbCancelarActionPerformed
    jcbusuariosCad.setEnabled(false);
    jcbcaminhaoCad.setEnabled(false);
    jtfdiario.setEnabled(false);
    jbCancelar.setEnabled(false);
    jbSalvar.setEnabled(false);
    jtfdiario.setText("");
    jcbusuariosCad.setSelectedIndex(0);
    jcbcaminhaoCad.setSelectedIndex(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_jbCancelarActionPerformed

    private void jbSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalvarActionPerformed

        if(validarCampos()){
              if(preencherObjeto()){
                  if(acao==1){
                  try {
                      if(DAO.incluir(obj)){
                          JOptionPane.showMessageDialog(this, "Salvo com sucesso!", "Meu Sistema", JOptionPane.INFORMATION_MESSAGE);
                          jbCancelarActionPerformed(evt);
                      } else{
                          JOptionPane.showMessageDialog(this, "Não Salvou!");
                      }
                  } catch (Exception ex) {
                      Logger.getLogger(JIFUsuarios.class.getName()).log(Level.SEVERE, null, ex);
                  }
                  }
                  if(acao==2){
                  try {
                      if(DAO.editar(obj)){
                          JOptionPane.showMessageDialog(this, "Atualizado com sucesso!", "Meu Sistema", JOptionPane.INFORMATION_MESSAGE);
                          jbCancelarActionPerformed(evt);
                      } else{
                          JOptionPane.showMessageDialog(this, "Não Atualizou!");
                      }
                  } catch (Exception ex) {
                      Logger.getLogger(JIFUsuarios.class.getName()).log(Level.SEVERE, null, ex);
                  }
                  }
         }
    }
  

// TODO add your handling code here:
    }//GEN-LAST:event_jbSalvarActionPerformed

    private void jcbusuariosCadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbusuariosCadActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_jcbusuariosCadActionPerformed

    private void jcbusuariosCadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcbusuariosCadMouseClicked
    // TODO add your handling code here:
    }//GEN-LAST:event_jcbusuariosCadMouseClicked

    private void jbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEditarActionPerformed
    jtfdiario.setEnabled(true);
    jcbusuariosCad.setEnabled(true);
    jcbcaminhaoCad.setEnabled(true);
    jbSalvar.setEnabled(true);
    jbCancelar.setEnabled(true);
    acao = 2;
        // TODO add your handling code here:
    }//GEN-LAST:event_jbEditarActionPerformed

    private void jtfPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfPesquisaKeyReleased
        try {DefaultTableModel mp = (DefaultTableModel) jtbrelatorios.getModel();
            mp.setNumRows(0);
            if(jtfPesquisa.getText().length()>=0){
                listaderelatorios=DAO.Pesquisar(jtfPesquisa.getText());
                for(Relatorio u: listaderelatorios){
                    mp.addRow(new String[]{""+u.getId(),""+u.getUsuario().getNome(),""+u.getCaminhao().getPlaca(),u.getDiario()});
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro:"+e.getMessage(),"Erro ao pesquisar",JOptionPane.ERROR_MESSAGE);
        }
//try {
//            DefaultTableModel mp = (DefaultTableModel) jtbrelatorios.getModel();
//            mp.setNumRows(0); // limpa quantidade de elementos na lista
//            if (jtfPesquisa.getText().length() > 0) {
//                listaderelatorios = DAO.Pesquisar(jtfPesquisa.getText()); // retorna a lista responsável por trazer todos os dados.
//                for (Relatorio c: listaderelatorios) {
//                    mp.addRow(new String[]{"" + c.getId(),  "" + c.getUsuario().getNome(), "" + c.getCaminhao().getPlaca(),c.getDiario()});
//                }
//            }    
//        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
//        }
        // TODO add your handling code here:

    }//GEN-LAST:event_jtfPesquisaKeyReleased

    private void jtbrelatoriosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbrelatoriosMouseClicked
        try {
            int linhaSelecionada = jtbrelatorios.getSelectedRow();
            if(linhaSelecionada>-1){
                jlidrel.setText(""+listaderelatorios.get(linhaSelecionada).getId());
                jtfdiario.setText(listaderelatorios.get(linhaSelecionada).getDiario());
                jcbusuariosCad.setSelectedItem(""+listaderelatorios.get(linhaSelecionada).getUsuario().getNome());
                jcbcaminhaoCad.setSelectedItem(""+listaderelatorios.get(linhaSelecionada).getCaminhao().getPlaca());
                jbEditar.setEnabled(true);
                jbexcluir.setEnabled(true);
                jtfdiario.setEditable(true);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro:"+e.getMessage(),"Erro ao pesquisar",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jtbrelatoriosMouseClicked

    private void jbexcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbexcluirActionPerformed
        try {
            if (DAO.excluir(Integer.parseInt(jlidrel.getText()))) {
                JOptionPane.showMessageDialog(this, "Excluído com sucesso!", "Meu sistema", JOptionPane.INFORMATION_MESSAGE);
                jbEditar.setEnabled(false);
                jbexcluir.setEnabled(false);
                jtfdiario.setText("");
                jcbusuariosCad.setSelectedIndex(0);
                jcbcaminhaoCad.setSelectedIndex(0);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro: " + e.getMessage());
        }


        // TODO add your handling code here:
    }//GEN-LAST:event_jbexcluirActionPerformed

    private void jtfPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfPesquisaMouseClicked
        jtfPesquisa.setText("");
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfPesquisaMouseClicked

    private void jtfdiarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtfdiarioMouseClicked

    }//GEN-LAST:event_jtfdiarioMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbCancelar;
    private javax.swing.JButton jbEditar;
    private javax.swing.JButton jbNovo;
    private javax.swing.JButton jbSalvar;
    private javax.swing.JButton jbexcluir;
    private javax.swing.JComboBox<String> jcbcaminhaoCad;
    private javax.swing.JComboBox<String> jcbusuariosCad;
    private javax.swing.JLabel jlidrel;
    private javax.swing.JTable jtbrelatorios;
    private javax.swing.JTextField jtfPesquisa;
    private javax.swing.JTextArea jtfdiario;
    // End of variables declaration//GEN-END:variables

private boolean preencherObjeto(){
    obj.setId(Integer.parseInt(jlidrel.getText()));
    obj.setUsuario(listadeusuarios.get(jcbusuariosCad.getSelectedIndex()-1));
    obj.setCaminhao(listadecaminhao.get(jcbcaminhaoCad.getSelectedIndex()-1));
    obj.setDiarios(jtfdiario.getText());
//    obj.set
    return true;

}
    
    private boolean validarCampos(){
    String msg = "";
    if(jtfdiario.getText().length()<3)
        msg+="\nO diario deve ter pelo menos 3 caracteres";
    if(jtfdiario.getText().length()>5000)
        msg+="\nO diario deve ter menos de 5000 caracteres"; 
    if(jcbusuariosCad.getSelectedIndex()==0)
        msg+="\nEscolha um usuário";
    if(jcbcaminhaoCad.getSelectedIndex()==0)
        msg+="\nEscolha um caminhão";
    if(msg.length()==0)
       return true;
    else{
       JOptionPane.showMessageDialog(this, "Corrija os seguintes campos" + msg, "Meu sistema", JOptionPane.ERROR_MESSAGE);
       return false;
    }
    }
    
    public boolean ativar(){
            jbNovo.setEnabled(true);
        return true;
    }
}


